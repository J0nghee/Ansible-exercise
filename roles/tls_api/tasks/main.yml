---
# tasks file for tls_api
- name: copy daemon.json
  template:
    src: daemon.json
    dest: /etc/docker

- name: create folder for override.conf
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: copy override.conf
  template:
    src: override.conf
    dest: /etc/systemd/system/docker.service.d/override.conf

- name: primi 3
  command: "{{ item }}"
  with_items:
     # - openssl genrsa -aes256 -passout pass:{{CA_keys_pass}} -out ca-key.pem 4096
      - openssl req -nodes -new -x509 -days {{  CA_expiration_days  }} -keyout ca-key.pem -sha256 -out ca.pem -subj {{  CA_details  }}
     # - openssl genrsa -out server-key.pem 4096
      - openssl req  -nodes -subj "/CN={{  daemon_hostname  }}" -sha256 -new -keyout server-key.pem -out server.csr
  args:
    creates: key.pem

- name: copy extfile.conf
  template:
    src: extfile.cnf
    dest: /home/vagrant/extfile.cnf

- name: last command
  command: >-
    openssl x509 -req -days {{  CA_expiration_days  }} -in server.csr -CA ca.pem
    -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile extfile.cnf
  args:
    creates: server-cert.pem

- name: client keys
  command: "{{ item }}"
  with_items:
   #- openssl genrsa -out key.pem 4096
    - openssl req -nodes -subj '/CN=client' -new -keyout key.pem -out client.csr
  args:
    creates: client.csr

- name: Copy file with owner and permissions
  copy:
    src: extfile-client.cnf
    dest: /home/vagrant/extfile-client.cnf

- name: generate signed certificate
  command: >-
    openssl x509 -req -days {{  CA_expiration_days  }} -sha256 -in client.csr -CA ca.pem
    -CAkey ca-key.pem -CAcreateserial -out cert.pem -extfile extfile-client.cnf
  args:
    creates: cert.pem

- name: chmod keys
  with_items:
      - ca-key.pem
      - key.pem
      - server-key.pem
  file:
    path: "{{ item }}"
    mode: 0400

- name: chmod server-cert
  with_items:
    - ca.pem
    - server-cert.pem
    - cert.pem
  file:
    path: "{{ item }}"
    mode: 0444

- name: fetch client's files
  with_items:
    - ca.pem
    - cert.pem
    - key.pem
  fetch:
    src: "{{ item }}"
    dest: .
  notify:
    - Restart docker service
